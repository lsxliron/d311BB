define(["underscore","backbone","jquery","path","hmap","datapoint","datapoints","mapview","legendview","splomview","json!data/Final_Data.json","json!data/gj.json"],function(e,t,n,r,i,s,o,u,a,f,l,c){var h=[];window.app={},app=window.app,app.vents=e.extend({},t.Events),app.helpers={},n.each(c.features,function(e,t){h.push(new r(t))});var p=new i(h),d=new o(l),v={minColor:"#8EA6E8",maxColor:"#F23A46",sortBy:"All_sa",points:d.toJSON()},m={minColor:"#8EA6E8",maxColor:"#F23A46",sortBy:"All_sa",points:d.toJSON(),legendWidth:30},g={fields:["All_sa","Pop","Flow"],points:d.toJSON()},y=new u({model:p,options:v}),b=new a({options:m}),w=new f({options:g});describe("testing SPLOM object",function(){it("tests the x and y functions",function(){w.x.domain([0,1]),w.y.domain([0,1]),w.x.range([0,10]),w.y.range([0,10]),expect(w.x(0)).to.equal(0),expect(w.x(1)).to.equal(10),expect(w.x(.5)).to.equal(5),expect(w.y(0)).to.equal(0),expect(w.y(1)).to.equal(10),expect(w.y(.5)).to.equal(5)}),it("should not be empty dataset",function(){expect(w.points.length).not.to.equal(0)}),it("Should contain a cross product of the complaints",function(){var e=["a","b","c"],t=w.cross(e,e),n=0;expect(t.length).to.equal(9);for(var r=0;r<e.length;r++){expect(t[n].x).to.be.equal(e[r]),expect(t[n].i).to.be.equal(r);for(var i=0;i<e.length;i++)expect(t[n].y).to.be.equal(e[i]),expect(t[n].j).to.be.equal(i),n+=1}})})});